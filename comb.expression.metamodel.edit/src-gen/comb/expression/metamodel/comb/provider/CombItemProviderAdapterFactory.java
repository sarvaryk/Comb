/**
 */
package comb.expression.metamodel.comb.provider;

import comb.expression.metamodel.comb.util.CombAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CombItemProviderAdapterFactory extends CombAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CombItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.PrecedenceAfter_until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrecedenceAfter_until_ItemProvider precedenceAfter_until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.PrecedenceAfter_until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrecedenceAfter_until_Adapter() {
		if (precedenceAfter_until_ItemProvider == null) {
			precedenceAfter_until_ItemProvider = new PrecedenceAfter_until_ItemProvider(this);
		}

		return precedenceAfter_until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AbsenceAfter_until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsenceAfter_until_ItemProvider absenceAfter_until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AbsenceAfter_until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsenceAfter_until_Adapter() {
		if (absenceAfter_until_ItemProvider == null) {
			absenceAfter_until_ItemProvider = new AbsenceAfter_until_ItemProvider(this);
		}

		return absenceAfter_until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _until_ItemProvider _until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_until_Adapter() {
		if (_until_ItemProvider == null) {
			_until_ItemProvider = new _until_ItemProvider(this);
		}

		return _until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.UniversalityBefore_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniversalityBefore_ItemProvider universalityBefore_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.UniversalityBefore_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniversalityBefore_Adapter() {
		if (universalityBefore_ItemProvider == null) {
			universalityBefore_ItemProvider = new UniversalityBefore_ItemProvider(this);
		}

		return universalityBefore_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.PrecedenceBefore_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrecedenceBefore_ItemProvider precedenceBefore_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.PrecedenceBefore_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrecedenceBefore_Adapter() {
		if (precedenceBefore_ItemProvider == null) {
			precedenceBefore_ItemProvider = new PrecedenceBefore_ItemProvider(this);
		}

		return precedenceBefore_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.UniversalityAfter_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniversalityAfter_ItemProvider universalityAfter_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.UniversalityAfter_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniversalityAfter_Adapter() {
		if (universalityAfter_ItemProvider == null) {
			universalityAfter_ItemProvider = new UniversalityAfter_ItemProvider(this);
		}

		return universalityAfter_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.BoundedExistenceAfter_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedExistenceAfter_ItemProvider boundedExistenceAfter_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.BoundedExistenceAfter_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedExistenceAfter_Adapter() {
		if (boundedExistenceAfter_ItemProvider == null) {
			boundedExistenceAfter_ItemProvider = new BoundedExistenceAfter_ItemProvider(this);
		}

		return boundedExistenceAfter_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.BoundedExistenceBetween_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedExistenceBetween_and_ItemProvider boundedExistenceBetween_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.BoundedExistenceBetween_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedExistenceBetween_and_Adapter() {
		if (boundedExistenceBetween_and_ItemProvider == null) {
			boundedExistenceBetween_and_ItemProvider = new BoundedExistenceBetween_and_ItemProvider(this);
		}

		return boundedExistenceBetween_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.BoundedExistenceGlobally_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedExistenceGlobally_ItemProvider boundedExistenceGlobally_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.BoundedExistenceGlobally_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedExistenceGlobally_Adapter() {
		if (boundedExistenceGlobally_ItemProvider == null) {
			boundedExistenceGlobally_ItemProvider = new BoundedExistenceGlobally_ItemProvider(this);
		}

		return boundedExistenceGlobally_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AbsenceBefore_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsenceBefore_ItemProvider absenceBefore_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AbsenceBefore_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsenceBefore_Adapter() {
		if (absenceBefore_ItemProvider == null) {
			absenceBefore_ItemProvider = new AbsenceBefore_ItemProvider(this);
		}

		return absenceBefore_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.UniversalityBetween_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniversalityBetween_and_ItemProvider universalityBetween_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.UniversalityBetween_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniversalityBetween_and_Adapter() {
		if (universalityBetween_and_ItemProvider == null) {
			universalityBetween_and_ItemProvider = new UniversalityBetween_and_ItemProvider(this);
		}

		return universalityBetween_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ResponseAfter_until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseAfter_until_ItemProvider responseAfter_until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ResponseAfter_until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseAfter_until_Adapter() {
		if (responseAfter_until_ItemProvider == null) {
			responseAfter_until_ItemProvider = new ResponseAfter_until_ItemProvider(this);
		}

		return responseAfter_until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.PrecedenceAfter_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrecedenceAfter_ItemProvider precedenceAfter_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.PrecedenceAfter_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrecedenceAfter_Adapter() {
		if (precedenceAfter_ItemProvider == null) {
			precedenceAfter_ItemProvider = new PrecedenceAfter_ItemProvider(this);
		}

		return precedenceAfter_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.Always_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Always_ItemProvider always_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.Always_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlways_Adapter() {
		if (always_ItemProvider == null) {
			always_ItemProvider = new Always_ItemProvider(this);
		}

		return always_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ResponseBetween_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseBetween_and_ItemProvider responseBetween_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ResponseBetween_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseBetween_and_Adapter() {
		if (responseBetween_and_ItemProvider == null) {
			responseBetween_and_ItemProvider = new ResponseBetween_and_ItemProvider(this);
		}

		return responseBetween_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ResponseAfter_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseAfter_ItemProvider responseAfter_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ResponseAfter_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseAfter_Adapter() {
		if (responseAfter_ItemProvider == null) {
			responseAfter_ItemProvider = new ResponseAfter_ItemProvider(this);
		}

		return responseAfter_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.PrecedenceBetween_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrecedenceBetween_and_ItemProvider precedenceBetween_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.PrecedenceBetween_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrecedenceBetween_and_Adapter() {
		if (precedenceBetween_and_ItemProvider == null) {
			precedenceBetween_and_ItemProvider = new PrecedenceBetween_and_ItemProvider(this);
		}

		return precedenceBetween_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ExistenceBetween_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistenceBetween_and_ItemProvider existenceBetween_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ExistenceBetween_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistenceBetween_and_Adapter() {
		if (existenceBetween_and_ItemProvider == null) {
			existenceBetween_and_ItemProvider = new ExistenceBetween_and_ItemProvider(this);
		}

		return existenceBetween_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ExistenceAfter_until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistenceAfter_until_ItemProvider existenceAfter_until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ExistenceAfter_until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistenceAfter_until_Adapter() {
		if (existenceAfter_until_ItemProvider == null) {
			existenceAfter_until_ItemProvider = new ExistenceAfter_until_ItemProvider(this);
		}

		return existenceAfter_until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ResponseBefore_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseBefore_ItemProvider responseBefore_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ResponseBefore_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseBefore_Adapter() {
		if (responseBefore_ItemProvider == null) {
			responseBefore_ItemProvider = new ResponseBefore_ItemProvider(this);
		}

		return responseBefore_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _and_ItemProvider _and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_and_Adapter() {
		if (_and_ItemProvider == null) {
			_and_ItemProvider = new _and_ItemProvider(this);
		}

		return _and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AbsenceGlobally_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsenceGlobally_ItemProvider absenceGlobally_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AbsenceGlobally_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsenceGlobally_Adapter() {
		if (absenceGlobally_ItemProvider == null) {
			absenceGlobally_ItemProvider = new AbsenceGlobally_ItemProvider(this);
		}

		return absenceGlobally_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AbsenceBetween_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsenceBetween_and_ItemProvider absenceBetween_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AbsenceBetween_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsenceBetween_and_Adapter() {
		if (absenceBetween_and_ItemProvider == null) {
			absenceBetween_and_ItemProvider = new AbsenceBetween_and_ItemProvider(this);
		}

		return absenceBetween_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._or_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _or_ItemProvider _or_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._or_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_or_Adapter() {
		if (_or_ItemProvider == null) {
			_or_ItemProvider = new _or_ItemProvider(this);
		}

		return _or_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.BoundedExistenceAfter_until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedExistenceAfter_until_ItemProvider boundedExistenceAfter_until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.BoundedExistenceAfter_until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedExistenceAfter_until_Adapter() {
		if (boundedExistenceAfter_until_ItemProvider == null) {
			boundedExistenceAfter_until_ItemProvider = new BoundedExistenceAfter_until_ItemProvider(this);
		}

		return boundedExistenceAfter_until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ExistenceAfter_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistenceAfter_ItemProvider existenceAfter_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ExistenceAfter_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistenceAfter_Adapter() {
		if (existenceAfter_ItemProvider == null) {
			existenceAfter_ItemProvider = new ExistenceAfter_ItemProvider(this);
		}

		return existenceAfter_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.UniversalityAfter_until_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniversalityAfter_until_ItemProvider universalityAfter_until_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.UniversalityAfter_until_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniversalityAfter_until_Adapter() {
		if (universalityAfter_until_ItemProvider == null) {
			universalityAfter_until_ItemProvider = new UniversalityAfter_until_ItemProvider(this);
		}

		return universalityAfter_until_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ResponseGlobally_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseGlobally_ItemProvider responseGlobally_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ResponseGlobally_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseGlobally_Adapter() {
		if (responseGlobally_ItemProvider == null) {
			responseGlobally_ItemProvider = new ResponseGlobally_ItemProvider(this);
		}

		return responseGlobally_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ExistenceGlobally_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistenceGlobally_ItemProvider existenceGlobally_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ExistenceGlobally_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistenceGlobally_Adapter() {
		if (existenceGlobally_ItemProvider == null) {
			existenceGlobally_ItemProvider = new ExistenceGlobally_ItemProvider(this);
		}

		return existenceGlobally_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.BoundedExistenceBefore_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedExistenceBefore_ItemProvider boundedExistenceBefore_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.BoundedExistenceBefore_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedExistenceBefore_Adapter() {
		if (boundedExistenceBefore_ItemProvider == null) {
			boundedExistenceBefore_ItemProvider = new BoundedExistenceBefore_ItemProvider(this);
		}

		return boundedExistenceBefore_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.Eventually_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Eventually_ItemProvider eventually_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.Eventually_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventually_Adapter() {
		if (eventually_ItemProvider == null) {
			eventually_ItemProvider = new Eventually_ItemProvider(this);
		}

		return eventually_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._implies_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _implies_ItemProvider _implies_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._implies_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_implies_Adapter() {
		if (_implies_ItemProvider == null) {
			_implies_ItemProvider = new _implies_ItemProvider(this);
		}

		return _implies_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.UniversalityGlobally_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniversalityGlobally_ItemProvider universalityGlobally_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.UniversalityGlobally_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniversalityGlobally_Adapter() {
		if (universalityGlobally_ItemProvider == null) {
			universalityGlobally_ItemProvider = new UniversalityGlobally_ItemProvider(this);
		}

		return universalityGlobally_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AbsenceAfter_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsenceAfter_ItemProvider absenceAfter_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AbsenceAfter_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsenceAfter_Adapter() {
		if (absenceAfter_ItemProvider == null) {
			absenceAfter_ItemProvider = new AbsenceAfter_ItemProvider(this);
		}

		return absenceAfter_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.ExistenceBefore_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExistenceBefore_ItemProvider existenceBefore_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.ExistenceBefore_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExistenceBefore_Adapter() {
		if (existenceBefore_ItemProvider == null) {
			existenceBefore_ItemProvider = new ExistenceBefore_ItemProvider(this);
		}

		return existenceBefore_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.PrecedenceGlobally_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrecedenceGlobally_ItemProvider precedenceGlobally_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.PrecedenceGlobally_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrecedenceGlobally_Adapter() {
		if (precedenceGlobally_ItemProvider == null) {
			precedenceGlobally_ItemProvider = new PrecedenceGlobally_ItemProvider(this);
		}

		return precedenceGlobally_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.Literal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiteralItemProvider literalItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.Literal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiteralAdapter() {
		if (literalItemProvider == null) {
			literalItemProvider = new LiteralItemProvider(this);
		}

		return literalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.Next_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Next_ItemProvider next_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.Next_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNext_Adapter() {
		if (next_ItemProvider == null) {
			next_ItemProvider = new Next_ItemProvider(this);
		}

		return next_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.Not_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Not_ItemProvider not_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.Not_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNot_Adapter() {
		if (not_ItemProvider == null) {
			not_ItemProvider = new Not_ItemProvider(this);
		}

		return not_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.EventuallyWithin_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventuallyWithin_and_ItemProvider eventuallyWithin_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.EventuallyWithin_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventuallyWithin_and_Adapter() {
		if (eventuallyWithin_and_ItemProvider == null) {
			eventuallyWithin_and_ItemProvider = new EventuallyWithin_and_ItemProvider(this);
		}

		return eventuallyWithin_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._untilWithin_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _untilWithin_and_ItemProvider _untilWithin_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._untilWithin_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_untilWithin_and_Adapter() {
		if (_untilWithin_and_ItemProvider == null) {
			_untilWithin_and_ItemProvider = new _untilWithin_and_ItemProvider(this);
		}

		return _untilWithin_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AlwaysWithin_and_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlwaysWithin_and_ItemProvider alwaysWithin_and_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AlwaysWithin_and_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlwaysWithin_and_Adapter() {
		if (alwaysWithin_and_ItemProvider == null) {
			alwaysWithin_and_ItemProvider = new AlwaysWithin_and_ItemProvider(this);
		}

		return alwaysWithin_and_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.Comb} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CombItemProvider combItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.Comb}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCombAdapter() {
		if (combItemProvider == null) {
			combItemProvider = new CombItemProvider(this);
		}

		return combItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._untilWithin_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _untilWithin_ItemProvider _untilWithin_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._untilWithin_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_untilWithin_Adapter() {
		if (_untilWithin_ItemProvider == null) {
			_untilWithin_ItemProvider = new _untilWithin_ItemProvider(this);
		}

		return _untilWithin_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.AlwaysWithin_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlwaysWithin_ItemProvider alwaysWithin_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.AlwaysWithin_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlwaysWithin_Adapter() {
		if (alwaysWithin_ItemProvider == null) {
			alwaysWithin_ItemProvider = new AlwaysWithin_ItemProvider(this);
		}

		return alwaysWithin_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb.EventuallyWithin_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventuallyWithin_ItemProvider eventuallyWithin_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb.EventuallyWithin_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventuallyWithin_Adapter() {
		if (eventuallyWithin_ItemProvider == null) {
			eventuallyWithin_ItemProvider = new EventuallyWithin_ItemProvider(this);
		}

		return eventuallyWithin_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._lessThan_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _lessThan_ItemProvider _lessThan_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._lessThan_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_lessThan_Adapter() {
		if (_lessThan_ItemProvider == null) {
			_lessThan_ItemProvider = new _lessThan_ItemProvider(this);
		}

		return _lessThan_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._lessThanOrEqual_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _lessThanOrEqual_ItemProvider _lessThanOrEqual_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._lessThanOrEqual_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_lessThanOrEqual_Adapter() {
		if (_lessThanOrEqual_ItemProvider == null) {
			_lessThanOrEqual_ItemProvider = new _lessThanOrEqual_ItemProvider(this);
		}

		return _lessThanOrEqual_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._equal_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _equal_ItemProvider _equal_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._equal_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_equal_Adapter() {
		if (_equal_ItemProvider == null) {
			_equal_ItemProvider = new _equal_ItemProvider(this);
		}

		return _equal_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._greaterThan_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _greaterThan_ItemProvider _greaterThan_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._greaterThan_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_greaterThan_Adapter() {
		if (_greaterThan_ItemProvider == null) {
			_greaterThan_ItemProvider = new _greaterThan_ItemProvider(this);
		}

		return _greaterThan_ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link comb.expression.metamodel.comb._greaterThanOrEqual_} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected _greaterThanOrEqual_ItemProvider _greaterThanOrEqual_ItemProvider;

	/**
	 * This creates an adapter for a {@link comb.expression.metamodel.comb._greaterThanOrEqual_}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter create_greaterThanOrEqual_Adapter() {
		if (_greaterThanOrEqual_ItemProvider == null) {
			_greaterThanOrEqual_ItemProvider = new _greaterThanOrEqual_ItemProvider(this);
		}

		return _greaterThanOrEqual_ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (precedenceAfter_until_ItemProvider != null)
			precedenceAfter_until_ItemProvider.dispose();
		if (absenceAfter_until_ItemProvider != null)
			absenceAfter_until_ItemProvider.dispose();
		if (_until_ItemProvider != null)
			_until_ItemProvider.dispose();
		if (universalityBefore_ItemProvider != null)
			universalityBefore_ItemProvider.dispose();
		if (precedenceBefore_ItemProvider != null)
			precedenceBefore_ItemProvider.dispose();
		if (universalityAfter_ItemProvider != null)
			universalityAfter_ItemProvider.dispose();
		if (boundedExistenceAfter_ItemProvider != null)
			boundedExistenceAfter_ItemProvider.dispose();
		if (boundedExistenceBetween_and_ItemProvider != null)
			boundedExistenceBetween_and_ItemProvider.dispose();
		if (boundedExistenceGlobally_ItemProvider != null)
			boundedExistenceGlobally_ItemProvider.dispose();
		if (absenceBefore_ItemProvider != null)
			absenceBefore_ItemProvider.dispose();
		if (universalityBetween_and_ItemProvider != null)
			universalityBetween_and_ItemProvider.dispose();
		if (responseAfter_until_ItemProvider != null)
			responseAfter_until_ItemProvider.dispose();
		if (precedenceAfter_ItemProvider != null)
			precedenceAfter_ItemProvider.dispose();
		if (always_ItemProvider != null)
			always_ItemProvider.dispose();
		if (responseBetween_and_ItemProvider != null)
			responseBetween_and_ItemProvider.dispose();
		if (responseAfter_ItemProvider != null)
			responseAfter_ItemProvider.dispose();
		if (precedenceBetween_and_ItemProvider != null)
			precedenceBetween_and_ItemProvider.dispose();
		if (existenceBetween_and_ItemProvider != null)
			existenceBetween_and_ItemProvider.dispose();
		if (existenceAfter_until_ItemProvider != null)
			existenceAfter_until_ItemProvider.dispose();
		if (responseBefore_ItemProvider != null)
			responseBefore_ItemProvider.dispose();
		if (_and_ItemProvider != null)
			_and_ItemProvider.dispose();
		if (absenceGlobally_ItemProvider != null)
			absenceGlobally_ItemProvider.dispose();
		if (absenceBetween_and_ItemProvider != null)
			absenceBetween_and_ItemProvider.dispose();
		if (_or_ItemProvider != null)
			_or_ItemProvider.dispose();
		if (boundedExistenceAfter_until_ItemProvider != null)
			boundedExistenceAfter_until_ItemProvider.dispose();
		if (existenceAfter_ItemProvider != null)
			existenceAfter_ItemProvider.dispose();
		if (universalityAfter_until_ItemProvider != null)
			universalityAfter_until_ItemProvider.dispose();
		if (responseGlobally_ItemProvider != null)
			responseGlobally_ItemProvider.dispose();
		if (existenceGlobally_ItemProvider != null)
			existenceGlobally_ItemProvider.dispose();
		if (boundedExistenceBefore_ItemProvider != null)
			boundedExistenceBefore_ItemProvider.dispose();
		if (eventually_ItemProvider != null)
			eventually_ItemProvider.dispose();
		if (_implies_ItemProvider != null)
			_implies_ItemProvider.dispose();
		if (universalityGlobally_ItemProvider != null)
			universalityGlobally_ItemProvider.dispose();
		if (absenceAfter_ItemProvider != null)
			absenceAfter_ItemProvider.dispose();
		if (existenceBefore_ItemProvider != null)
			existenceBefore_ItemProvider.dispose();
		if (precedenceGlobally_ItemProvider != null)
			precedenceGlobally_ItemProvider.dispose();
		if (literalItemProvider != null)
			literalItemProvider.dispose();
		if (next_ItemProvider != null)
			next_ItemProvider.dispose();
		if (not_ItemProvider != null)
			not_ItemProvider.dispose();
		if (eventuallyWithin_and_ItemProvider != null)
			eventuallyWithin_and_ItemProvider.dispose();
		if (_untilWithin_and_ItemProvider != null)
			_untilWithin_and_ItemProvider.dispose();
		if (alwaysWithin_and_ItemProvider != null)
			alwaysWithin_and_ItemProvider.dispose();
		if (combItemProvider != null)
			combItemProvider.dispose();
		if (_untilWithin_ItemProvider != null)
			_untilWithin_ItemProvider.dispose();
		if (alwaysWithin_ItemProvider != null)
			alwaysWithin_ItemProvider.dispose();
		if (eventuallyWithin_ItemProvider != null)
			eventuallyWithin_ItemProvider.dispose();
		if (_lessThan_ItemProvider != null)
			_lessThan_ItemProvider.dispose();
		if (_lessThanOrEqual_ItemProvider != null)
			_lessThanOrEqual_ItemProvider.dispose();
		if (_equal_ItemProvider != null)
			_equal_ItemProvider.dispose();
		if (_greaterThan_ItemProvider != null)
			_greaterThan_ItemProvider.dispose();
		if (_greaterThanOrEqual_ItemProvider != null)
			_greaterThanOrEqual_ItemProvider.dispose();
	}

}
